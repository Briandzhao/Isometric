import java.util.*;
HashMap<Integer, Float> notes = new HashMap<Integer, Float>();
HashMap<Integer, Float> notes2 = new HashMap<Integer, Float>();

void addNotes() {
	for (int i = 0 ; i < notesInSec.length - 1; i ++) {
		notes.put((int)(notesInSec[i]*60), (notesInSec[i+1]-notesInSec[i])*60);
	}
	notes.put((int)(notesInSec[notesInSec.length-1]*60), 60.0);
	for (int i = 0 ; i < notes2InSec.length - 1; i ++) {
		notes2.put((int)(notes2InSec[i]*60), (notes2InSec[i+1]-notes2InSec[i])*60);
	}
	notes2.put((int)(notes2InSec[notes2InSec.length-1]*60), 60.0);
}

float[] notes2InSec = {
	59.3,
	59.752,
	60.239,
	60.698,
	61.162,
	64.237,
	64.67,
	65.14,
	65.6,
	66.061,
	69.136,
	69.592,
	70.045,
	70.504,
	70.963,
	74,
	74.491,
	74.956,
	75.412,
	75.868
};

float[] notesInSec = {
	5,//
	5.36,
	5.66,
	5.95,
	6.25,// 375
	6.538,
	6.83,
	7.122,
	7.415,// 445
	7.695,
	7.99,
	8.279,
	8.546,// 513
	8.839,
	9.124,
	9.403,
	9.69,// 581
	9.962,
	10.245,
	10.522,
	10.795,// 647
	11.067,
	11.347,
	11.62,
	11.899,// 714
	12.165,
	12.429,
	12.687,
	12.969,// 778
	13.236,
	13.503,
	13.770,
	14.028,// 841
	14.291,
	14.552,
	14.806,
	15.09,//
	15.33,
	15.57,
	15.84,
	16.107,//
	16.358,
	16.611,
	16.862,
	17.106,//
	17.364,
	17.614,
	17.865,
	18.084,//
	18.334,
	18.587,
	18.832,
	19.102,//
	19.329,
	19.583,
	19.819,
	20.062,//
	20.305,
	20.551,
	20.786,
	21.01,//
	21.262,
	21.497,
	21.727,
	21.965,
	22.195,
	22.423,
	22.662,
	22.895,
	23.117,
	23.35,
	23.583,
	23.808,
	24.027,
	24.279,
	24.496,
	24.703,
	24.946,
	25.168,
	25.39,
	25.598,
	25.83,
	26.052,
	26.271,
	26.476,
	26.725,
	26.94,
	27.151,
	27.372,
	27.587,
	27.792,
	28.019,
	28.238,
	28.43,
	28.652,
	28.859,
	29.09,
	29.296,
	29.521,
	29.715,
	29.926,
	30.13,
	30.339,
	30.54,
	30.738,
	30.951,
	31.161,
	31.355,
	31.576,
	31.776,
	31.97,
	32.177,
	32.39,
	32.589,
	32.784,
	32.992,
	33.164,
	33.374,
	33.59,
	33.78,
	33.99,
	34.17,
	34.35,
	34.56,
	34.77,
	34.96,
	35.14,
	35.33,
	35.51,
	35.74,
	35.9,
	36.1,
	36.3,
	36.47,
	36.69,
	36.88,
	37.06,
	37.246,
	37.442,
	37.605,
	37.799,
	37.977,
	38.17,
	38.348,
	38.536,
	38.727,
	38.889,
	39.09,
	39.275,
	39.464,
	39.634,
	39.811,
	40,
	40.2,
	40.38,
	40.548,
	40.722,
	40.942,
	41.097,
	41.28,
	41.45,
	41.61,
	41.775,
	41.966,
	42.149,
	42.32,
	42.51,
	42.675,
	42.854,
	43.028,
	43.188,
	43.389,
	43.591,
	43.73,
	43.887,
	44.053,
	44.208,
	44.399,
	44.577,
	44.758,
	44.924,
	45.085,
	45.179,
	45.242,
	45.36,
	45.609,
	45.764,
	45.915,
	46.11,
	46.25,
	46.39,
	46.571,
	46.744,
	46.893,
	47.057,
	47.239,
	47.4,
	47.565,
	47.721,
	47.879,
	48.035,
	48.203,
	48.361,
	48.527,
	48.682,
	48.86,
	48.998,
	49.173,
	49.319,
	49.5,
	49.66,
	49.814,
	49.966,
	50.17,
	50.274,
	50.447,
	50.591,
	50.748,
	50.903,
	51.029,
	51.2,
	51.365,
	51.47,
	51.582,
	51.738,
	51.86,
	52,
	52.107,
	52.263,
	52.424,
	52.565,
	52.723,
	52.88,
	53.03,
	53.233,
	53.39,
	53.579,
	53.734,
	53.889,
	54.063,
	54.255,
	54.461,
	54.632,
	54.813,
	55.032,
	55.251,
	55.487,
	55.739,
	55.995,
	56.311,
	56.719
};